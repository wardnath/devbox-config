 | (-h | --help) "show this help message and exit"
 | --yaml-output, "--yml-output, -y"
 | --yaml-roundtrip, "--yml-roundtrip, -Y"
 | --yaml-output-grammar-version "{1.1,1.2}, --yml-out-ver {1.1,1.2}"
 | --width "WIDTH, -w WIDTH"
 | --indentless-lists, "--indentless"
 | --explicit-start "When using --yaml-output, always emit explicit document start ("---")"
 | --explicit-end "When using --yaml-output, always emit explicit document end ("...")"
 | --in-place, "-i        Edit files in place (no backup - use caution)"
 | --version "show program's version number and exit"
 | (-n | --null-input) "use `null` as the single input value;"
 | (-R | --raw-input) "read each line as string instead of JSON;"
 | (-s | --slurp) "read all inputs into an array and use it as"
 | (-c | --compact-output) "compact instead of pretty-printed output;"
 | (-r | --raw-output) "output strings without escapes and quotes;"
 | --raw-output0 "implies -r and output NUL after each output;"
 | (-j | --join-output) "implies -r and output without newline after"
 | (-a | --ascii-output) "output strings by only ASCII characters"
 | (-S | --sort-keys) "sort keys of each object on output;"
 | (-C | --color-output) "colorize JSON output;"
 | (-M | --monochrome-output) "disable colored output;"
 | --tab "use tabs for indentation;"
 | --indent "n            use n spaces for indentation (max 7 spaces);"
 | --unbuffered "flush output stream after each output;"
 | --stream "parse the input value in streaming fashion;"
 | --stream-errors "implies --stream and report parse error as"
 | --seq "parse input/output as application/json-seq;"
 | (-f | --from-file) "file      load filter from the file;"
 | -L "directory              search modules from the directory;"
 | --arg "name value      set $name to the string value;"
 | --argjson "name value  set $name to the JSON value;"
 | --slurpfile "name file set $name to an array of JSON values read"
 | --rawfile "name file   set $name to string contents of file;"
 | --args "consume remaining arguments as positional"
 | --jsonargs "consume remaining arguments as positional"
 | (-e | --exit-status) "set exit status code based on the output;"
 | (-V | --version) "show the version;"
 | --build-configuration "show jq's build configuration;"
 | (-h | --help) "show the help;"
 | -- "terminates argument processing;"
